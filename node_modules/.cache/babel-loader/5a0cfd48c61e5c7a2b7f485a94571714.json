{"remainingRequest":"/Users/eunjae/Desktop/github/hackernews0401ej/node_modules/babel-loader/lib/index.js!/Users/eunjae/Desktop/github/hackernews0401ej/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/eunjae/Desktop/github/hackernews0401ej/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/eunjae/Desktop/github/hackernews0401ej/src/views/CommentsView.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/eunjae/Desktop/github/hackernews0401ej/src/views/CommentsView.vue","mtime":1586172312801},{"path":"/Users/eunjae/Desktop/github/hackernews0401ej/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/eunjae/Desktop/github/hackernews0401ej/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/eunjae/Desktop/github/hackernews0401ej/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/eunjae/Desktop/github/hackernews0401ej/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KZXhwb3J0IGRlZmF1bHQgewogIGNvbXB1dGVkOiB7CiAgICBjb21tZW50czogZnVuY3Rpb24gY29tbWVudHMoKSB7CiAgICAgIHJldHVybiB0aGlzLiRzdG9yZS5zdGF0ZS5jb21tZW50TGlzdDsKICAgIH0sCiAgICBjb21tZW50Q29udGVudHM6IGZ1bmN0aW9uIGNvbW1lbnRDb250ZW50cygpIHsKICAgICAgcmV0dXJuIHRoaXMuJHN0b3JlLnN0YXRlLmNvbW1lbnRMaXN0LmNvbW1lbnRzOwogICAgfQogIH0sCiAgY3JlYXRlZDogZnVuY3Rpb24gY3JlYXRlZCgpIHsKICAgIHZhciBjb21tSWROdW0gPSB0aGlzLiRyb3V0ZS5wYXJhbXMuaWQ7CiAgICB0aGlzLiRzdG9yZS5kaXNwYXRjaCgnRkVUQ0hfQ09NTUVOVCcsIGNvbW1JZE51bSk7CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgLy9iZWZvcmVVcGRhdGUoKSAgICAvLyBzY3JpcHTsl5DshJwgb25sb2Fk7J2865WM7JmAIOqwmeuLpOqzoCDsg53qsIHtlZjrqbQg7Im964ukLgogICAgdmFyIGxvYWRpbmcgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcubG9hZGluZycpOwogICAgdmFyIHJvdXRlclZpZXcgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuY29tbWVudENvbnRlbnRzJyk7CiAgICB2YXIgbG9hZGluZ0JhciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5sb2FkaW5nQmFyJyk7CiAgICByZXF1ZXN0QW5pbWF0aW9uRnJhbWUoZnVuY3Rpb24gKCkgewogICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHsKICAgICAgICBsb2FkaW5nQmFyLnN0eWxlLndpZHRoID0gJzUwJSc7CiAgICAgIH0sIDApOwogICAgfSk7CiAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHsKICAgICAgbG9hZGluZy5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnOwogICAgfSwgMzAwKTsKICB9Cn07"},{"version":3,"sources":["CommentsView.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AA0BA,eAAA;AACA,EAAA,QAAA,EAAA;AACA,IAAA,QADA,sBACA;AACA,aAAA,KAAA,MAAA,CAAA,KAAA,CAAA,WAAA;AACA,KAHA;AAIA,IAAA,eAJA,6BAIA;AACA,aAAA,KAAA,MAAA,CAAA,KAAA,CAAA,WAAA,CAAA,QAAA;AACA;AANA,GADA;AASA,EAAA,OATA,qBASA;AACA,QAAA,SAAA,GAAA,KAAA,MAAA,CAAA,MAAA,CAAA,EAAA;AACA,SAAA,MAAA,CAAA,QAAA,CAAA,eAAA,EAAA,SAAA;AACA,GAZA;AAaA,EAAA,OAbA,qBAaA;AAAA;AACA,QAAA,OAAA,GAAA,QAAA,CAAA,aAAA,CAAA,UAAA,CAAA;AACA,QAAA,UAAA,GAAA,QAAA,CAAA,aAAA,CAAA,kBAAA,CAAA;AACA,QAAA,UAAA,GAAA,QAAA,CAAA,aAAA,CAAA,aAAA,CAAA;AAEA,IAAA,qBAAA,CAAA,YAAA;AACA,MAAA,UAAA,CAAA,YAAA;AACA,QAAA,UAAA,CAAA,KAAA,CAAA,KAAA,GAAA,KAAA;AACA,OAFA,EAEA,CAFA,CAAA;AAGA,KAJA,CAAA;AAMA,IAAA,UAAA,CAAA,YAAA;AACA,MAAA,OAAA,CAAA,KAAA,CAAA,OAAA,GAAA,MAAA;AACA,KAFA,EAEA,GAFA,CAAA;AAGA;AA3BA,CAAA","sourcesContent":["<template>\n    <div class=\"commentBox\">\n        <div class=\"loading\">\n            <span>loading...</span>\n            <div class=\"loadingBar\"></div>\n        </div>\n\n        <div class=\"commentContents\">\n            <b>by {{ comments.user }}</b>\n            <span> - {{ comments.time_ago }}</span>\n            <h1>{{ comments.title }}</h1>\n            <span v-html=\"comments.content\" class=\"askContent\"></span>\n\n            <ol>\n                <li v-for=\"item in commentContents\" :key=\"item.id\">\n                    <span class=\"commUser\">ID: <span>{{ item.user }}</span></span>\n                    <span \n                        class=\"commentsText\"\n                        v-html=\"item.content\"></span>\n                </li>\n            </ol>\n        </div>\n    </div>\n</template>\n\n<script>\nexport default {\n    computed: {\n        comments() {\n            return this.$store.state.commentList\n        },\n        commentContents() {\n            return this.$store.state.commentList.comments\n        }\n    },\n    created() {\n        const commIdNum = this.$route.params.id\n        this.$store.dispatch('FETCH_COMMENT', commIdNum)\n    },\n    mounted() { //beforeUpdate()    // script에서 onload일때와 같다고 생각하면 쉽다.\n        let loading = document.querySelector('.loading');\n        let routerView = document.querySelector('.commentContents');\n        let loadingBar = document.querySelector('.loadingBar')\n        \n        requestAnimationFrame(function() {\n            setTimeout(function() {\n                loadingBar.style.width = '50%'\n            }, 0)\n        })\n\n        setTimeout(function() {\n            loading.style.display = 'none';\n        }, 300)\n    }\n}\n</script>\n\n<style>\n.commentBox{ position:relative; }\n/* .commentBox > b{ padding-left:40px; }\n.commentBox > h1{ padding-left:40px; } */\n.commentBox  span.askContent > p{ padding:0 20px; }\n.commentBox  span.askContent > p:last-child{ margin-bottom:40px;  }\n\n.commentBox  ol{ border:3px solid #353434; position:relative; }\n.commentBox  ol > li{ border-bottom:2px solid #353434; padding:10px 0; background:transparent; list-style:none; }\n.commentBox  ol > li:last-child{ border-bottom:none; margin-bottom:0; }\n.commentBox  ol > li > .commUser > span{ padding:2px 5px; background-color:rgba(53, 52, 52, .3); display:inline; }\n.commentBox  ol > li > .commentsText{ padding:0 25px; }\n</style>"],"sourceRoot":"src/views"}]}