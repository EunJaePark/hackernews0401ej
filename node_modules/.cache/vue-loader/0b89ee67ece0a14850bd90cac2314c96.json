{"remainingRequest":"/Users/eunjae/Desktop/github/hackernews0401ej/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/eunjae/Desktop/github/hackernews0401ej/src/views/NewsView.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/eunjae/Desktop/github/hackernews0401ej/src/views/NewsView.vue","mtime":1586172298872},{"path":"/Users/eunjae/Desktop/github/hackernews0401ej/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/eunjae/Desktop/github/hackernews0401ej/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/eunjae/Desktop/github/hackernews0401ej/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/eunjae/Desktop/github/hackernews0401ej/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCi8vIGltcG9ydCBheGlvcyBmcm9tICdheGlvcycKZXhwb3J0IGRlZmF1bHQgewogICAgY29tcHV0ZWQ6IHsKICAgICAgICBsaXN0ICgpIHsKICAgICAgICAgICAgcmV0dXJuIHRoaXMuJHN0b3JlLnN0YXRlLmxpc3QKICAgICAgICB9CiAgICB9LAogICAgY3JlYXRlZCgpIHsKICAgICAgICB0aGlzLiRzdG9yZS5kaXNwYXRjaCgnRkVUQ0hfTElTVCcsICduZXdzJykKICAgIH0sCiAgICBtb3VudGVkKCkgeyAvL2JlZm9yZVVwZGF0ZSgpICAgIAogICAgbGV0IHJvdXRlclZpZXcgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdvbCcpOwogICAgbGV0IGxvYWRpbmcgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcubG9hZGluZycpOwogICAgbGV0IGxvYWRpbmdCYXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcubG9hZGluZ0JhcicpCiAgICBjb25zb2xlLmxvZyhsb2FkaW5nQmFyKTsKICAgIHJlcXVlc3RBbmltYXRpb25GcmFtZShmdW5jdGlvbigpIHsKICAgICAgc2V0VGltZW91dChmdW5jdGlvbigpIHsKICAgICAgbG9hZGluZ0Jhci5zdHlsZS53aWR0aCA9ICc1MCUnCiAgICAgIH0sIDApCiAgICB9KQogICAgc2V0VGltZW91dChmdW5jdGlvbigpIHsKICAgICAgbG9hZGluZy5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnOwogICAgfSwgMzAwKQogICAKICB9Cn0K"},{"version":3,"sources":["NewsView.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAsBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA","file":"NewsView.vue","sourceRoot":"src/views","sourcesContent":["\n<template>\n<div > \n  <ol>\n    <div class=\"loading\">\n      <span>loading...</span>\n      <div class=\"loadingBar\"></div>\n    </div>\n\n    <li v-for=\"item in list\" :key=\"item.id\">\n      <a :href=\"item.url\" target=\"blank\" class=\"title\">{{ item.title }} </a>\n      <router-link \n        class=\"comments\"\n        :to=\"`/item/${item.id}`\"> ( {{ item.comments_count }} )</router-link>\n      <span class=\"user\">by <span>{{ item.user }}</span></span>\n      <span class=\"time\">{{item.time_ago}}</span> \n    </li>\n  </ol>\n</div>\n</template>\n\n<script>\n// import axios from 'axios'\nexport default {\n    computed: {\n        list () {\n            return this.$store.state.list\n        }\n    },\n    created() {\n        this.$store.dispatch('FETCH_LIST', 'news')\n    },\n    mounted() { //beforeUpdate()    \n    let routerView = document.querySelector('ol');\n    let loading = document.querySelector('.loading');\n    let loadingBar = document.querySelector('.loadingBar')\n    console.log(loadingBar);\n    requestAnimationFrame(function() {\n      setTimeout(function() {\n      loadingBar.style.width = '50%'\n      }, 0)\n    })\n    setTimeout(function() {\n      loading.style.display = 'none';\n    }, 300)\n   \n  }\n}\n</script>\n\n<style>\n</style>"]}]}