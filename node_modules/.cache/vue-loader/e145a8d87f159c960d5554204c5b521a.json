{"remainingRequest":"/Users/eunjae/Desktop/github/hackernews0401ej/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/eunjae/Desktop/github/hackernews0401ej/src/views/CommentsView.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/Users/eunjae/Desktop/github/hackernews0401ej/src/views/CommentsView.vue","mtime":1585882493989},{"path":"/Users/eunjae/Desktop/github/hackernews0401ej/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/eunjae/Desktop/github/hackernews0401ej/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/eunjae/Desktop/github/hackernews0401ej/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/eunjae/Desktop/github/hackernews0401ej/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/eunjae/Desktop/github/hackernews0401ej/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLyogLmNvbW1lbnRCb3ggPiBieyBwYWRkaW5nLWxlZnQ6NDBweDsgfQouY29tbWVudEJveCA+IGgxeyBwYWRkaW5nLWxlZnQ6NDBweDsgfSAqLwouY29tbWVudEJveCA+IHNwYW4uYXNrQ29udGVudCA+IHB7IHBhZGRpbmc6MCAyMHB4OyB9Ci5jb21tZW50Qm94ID4gc3Bhbi5hc2tDb250ZW50ID4gcDpsYXN0LWNoaWxkeyBtYXJnaW4tYm90dG9tOjQwcHg7ICB9CgouY29tbWVudEJveCA+IG9seyBib3JkZXI6M3B4IHNvbGlkICMzNTM0MzQ7IH0KLmNvbW1lbnRCb3ggPiBvbCA+IGxpeyBib3JkZXItYm90dG9tOjJweCBzb2xpZCAjMzUzNDM0OyBwYWRkaW5nOjEwcHggMDsgYmFja2dyb3VuZDp0cmFuc3BhcmVudDsgbGlzdC1zdHlsZTpub25lOyB9Ci5jb21tZW50Qm94ID4gb2wgPiBsaTpsYXN0LWNoaWxkeyBib3JkZXItYm90dG9tOm5vbmU7IG1hcmdpbi1ib3R0b206MDsgfQouY29tbWVudEJveCA+IG9sID4gbGkgPiAuY29tbVVzZXIgPiBzcGFueyBwYWRkaW5nOjJweCA1cHg7IGJhY2tncm91bmQtY29sb3I6cmdiYSg1MywgNTIsIDUyLCAuMyk7IGRpc3BsYXk6aW5saW5lOyB9Ci5jb21tZW50Qm94ID4gb2wgPiBsaSA+IC5jb21tZW50c1RleHR7IHBhZGRpbmc6MCAyNXB4OyB9Cg=="},{"version":3,"sources":["CommentsView.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoCA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"CommentsView.vue","sourceRoot":"src/views","sourcesContent":["<template>\n    <div class=\"commentBox\">\n        <b>by {{ comments.user }}</b>\n        <span> - {{ comments.time_ago }}</span>\n        <h1>{{ comments.title }}</h1>\n        <span v-html=\"comments.content\" class=\"askContent\"></span>\n\n        <ol>\n            <li v-for=\"item in commentContents\" :key=\"item.id\">\n                <span class=\"commUser\">ID: <span>{{ item.user }}</span></span>\n                <span \n                    class=\"commentsText\"\n                    v-html=\"item.content\"></span>\n            </li>\n        </ol>\n    </div>\n</template>\n\n<script>\nexport default {\n    computed: {\n        comments() {\n            return this.$store.state.commentList\n        },\n        commentContents() {\n            return this.$store.state.commentList.comments\n        }\n    },\n    created() {\n        const commIdNum = this.$route.params.id\n        this.$store.dispatch('FETCH_COMMENT', commIdNum)\n    }\n}\n</script>\n\n<style>\n/* .commentBox > b{ padding-left:40px; }\n.commentBox > h1{ padding-left:40px; } */\n.commentBox > span.askContent > p{ padding:0 20px; }\n.commentBox > span.askContent > p:last-child{ margin-bottom:40px;  }\n\n.commentBox > ol{ border:3px solid #353434; }\n.commentBox > ol > li{ border-bottom:2px solid #353434; padding:10px 0; background:transparent; list-style:none; }\n.commentBox > ol > li:last-child{ border-bottom:none; margin-bottom:0; }\n.commentBox > ol > li > .commUser > span{ padding:2px 5px; background-color:rgba(53, 52, 52, .3); display:inline; }\n.commentBox > ol > li > .commentsText{ padding:0 25px; }\n</style>"]}]}